[General]
#debug-on-errors = true
#record-eventlog = true
#eventlog-message-detail-pattern = Packet:declaredOn(Packet) or bitLength
#eventlog-message-detail-pattern = *


**.debug = true
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 2000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m


######################################################################################################################

#										WORKING ZONE - Simulation of 100 satellites

######################################################################################################################

#	name of the simulation is [Config Net100] 
[Config Net100] 
#	name of the network
network = networks.Net100


###############################
#		Node
###############################

**.rte[*].mobility.typename = "SuperpositioningMobility"
**.rte[*].mobility.numElements = 2


**.rte[*].appType = "App"
**.rte[*].app.packetLength = 4096 bytes

**.numHosts = 100
**.alpha = 5
**.m_var = 50
**.changeRate = 30

# other rtes are intiallly positioned in static concentric circles
**.rte[*].mobility.element[0].typename = "StaticGridMobility"
**.rte[*].mobility.element[0].subjectModule = "^.^"
**.rte[*].mobility.element[0].numHosts = 100
**.rte[*].mobility.element[0].columns = 10
**.rte[*].mobility.element[0].rows = 10
**.rte[*].mobility.element[0].separationX = 50m
**.rte[*].mobility.element[0].separationY = 40m
**.rte[0].mobility.element[1].typename = "LinearMobility"
**.rte[0].mobility.element[1].faceForward = false
**.rte[0].mobility.element[1].speed = 0mps
**.rte[*].mobility.element[1].typename = "AttachedMobility" # other hosts follow the movement of the 2nd element of host[0]'s mobility superposition 
**.rte[*].mobility.element[1].mobilityModule = "^.^.^.rte[0].mobility.element[1]"
# define destnation  ???????????????????????????????????????????????????????????????????
**.destAddresses = "1 10 55 90 99"

**.rte[*].app.hopCount.result-recording-modes = all,-vector,+histogram



###############################
#		App
###############################
# define packetLength in Bytes for message generating in App.cc
#**.rte[*].app.packetLength = intuniform(128 byte, 1024 byte)



###############################
#		Visualizer
###############################
*.hasVisualizer = true
#	mobility visulizer, shows velocity and orientation
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mobilityVisualizer.displayOrientations = true
*.visualizer.mobilityVisualizer.displayVelocities = true





######################################################################################################################

#										WORKING ZONE - Simulation of 25 satellites

######################################################################################################################
#	name of the simulation is [Config Net100] 
[Config Net25] 
#	name of the network
network = networks.Net25


###############################
#		Node
###############################

**.rte[*].mobility.typename = "SuperpositioningMobility"
**.rte[*].mobility.numElements = 2


**.rte[*].appType = "App"
**.rte[*].app.packetLength = 4096 bytes


**.numHosts = 25
**.alpha = 3
**.m_var = 5
**.changeRate = 30
# other rtes are intiallly positioned in static concentric circles
**.rte[*].mobility.element[0].typename = "StaticGridMobility"
**.rte[*].mobility.element[0].subjectModule = "^.^"
**.rte[*].mobility.element[0].numHosts = 25
**.rte[*].mobility.element[0].columns = 5
**.rte[*].mobility.element[0].rows = 5
**.rte[*].mobility.element[0].separationX = 50m
**.rte[*].mobility.element[0].separationY = 40m
**.rte[0].mobility.element[1].typename = "LinearMobility"
**.rte[0].mobility.element[1].faceForward = false
**.rte[0].mobility.element[1].speed = 40mps
**.rte[*].mobility.element[1].typename = "AttachedMobility" # other hosts follow the movement of the 2nd element of host[0]'s mobility superposition 
**.rte[*].mobility.element[1].mobilityModule = "^.^.^.rte[0].mobility.element[1]"
# define destnation  ???????????????????????????????????????????????????????????????????
**.destAddresses = "1 7 12 19 24"

**.rte[*].app.hopCount.result-recording-modes = all,-vector,+histogram



###############################
#		App
###############################
# define packetLength in Bytes for message generating in App.cc
#**.app.packetLength = intuniform(128 byte, 1024 byte)



###############################
#		Visualizer
###############################
*.hasVisualizer = true
#	mobility visulizer, shows velocity and orientation
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mobilityVisualizer.displayOrientations = true
*.visualizer.mobilityVisualizer.displayVelocities = true

